// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "06/10/2023 14:37:57"

// 
// Device: Altera EP4CGX15BF14A7 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Counter (
	K,
	Load,
	Clk);
output 	K;
input 	Load;
input 	Clk;

// Design Ports Information
// K	=>  Location: PIN_N4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Clk	=>  Location: PIN_J7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Load	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \K~output_o ;
wire \Clk~input_o ;
wire \Clk~inputclkctrl_outclk ;
wire \Load~input_o ;
wire \count~2_combout ;
wire \count~1_combout ;
wire \count~0_combout ;
wire \count~3_combout ;
wire \count~4_combout ;
wire \Equal0~0_combout ;
wire \K~reg0_q ;
wire [3:0] count;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X10_Y0_N9
cycloneiv_io_obuf \K~output (
	.i(\K~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\K~output_o ),
	.obar());
// synopsys translate_off
defparam \K~output .bus_hold = "false";
defparam \K~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X16_Y0_N15
cycloneiv_io_ibuf \Clk~input (
	.i(Clk),
	.ibar(gnd),
	.o(\Clk~input_o ));
// synopsys translate_off
defparam \Clk~input .bus_hold = "false";
defparam \Clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G17
cycloneiv_clkctrl \Clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\Clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\Clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \Clk~inputclkctrl .clock_type = "global clock";
defparam \Clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X12_Y0_N1
cycloneiv_io_ibuf \Load~input (
	.i(Load),
	.ibar(gnd),
	.o(\Load~input_o ));
// synopsys translate_off
defparam \Load~input .bus_hold = "false";
defparam \Load~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N18
cycloneiv_lcell_comb \count~2 (
// Equation(s):
// \count~2_combout  = (!count[0] & !\Load~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(count[0]),
	.datad(\Load~input_o ),
	.cin(gnd),
	.combout(\count~2_combout ),
	.cout());
// synopsys translate_off
defparam \count~2 .lut_mask = 16'h000F;
defparam \count~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X11_Y1_N19
dffeas \count[0] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\count~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(count[0]),
	.prn(vcc));
// synopsys translate_off
defparam \count[0] .is_wysiwyg = "true";
defparam \count[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N16
cycloneiv_lcell_comb \count~1 (
// Equation(s):
// \count~1_combout  = (!\Load~input_o  & (count[1] $ (count[0])))

	.dataa(\Load~input_o ),
	.datab(gnd),
	.datac(count[1]),
	.datad(count[0]),
	.cin(gnd),
	.combout(\count~1_combout ),
	.cout());
// synopsys translate_off
defparam \count~1 .lut_mask = 16'h0550;
defparam \count~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X11_Y1_N17
dffeas \count[1] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\count~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(count[1]),
	.prn(vcc));
// synopsys translate_off
defparam \count[1] .is_wysiwyg = "true";
defparam \count[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N30
cycloneiv_lcell_comb \count~0 (
// Equation(s):
// \count~0_combout  = (!\Load~input_o  & (count[2] $ (((count[1] & count[0])))))

	.dataa(\Load~input_o ),
	.datab(count[1]),
	.datac(count[2]),
	.datad(count[0]),
	.cin(gnd),
	.combout(\count~0_combout ),
	.cout());
// synopsys translate_off
defparam \count~0 .lut_mask = 16'h1450;
defparam \count~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X11_Y1_N31
dffeas \count[2] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\count~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(count[2]),
	.prn(vcc));
// synopsys translate_off
defparam \count[2] .is_wysiwyg = "true";
defparam \count[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N6
cycloneiv_lcell_comb \count~3 (
// Equation(s):
// \count~3_combout  = (!count[1]) # (!count[2])

	.dataa(gnd),
	.datab(gnd),
	.datac(count[2]),
	.datad(count[1]),
	.cin(gnd),
	.combout(\count~3_combout ),
	.cout());
// synopsys translate_off
defparam \count~3 .lut_mask = 16'h0FFF;
defparam \count~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N28
cycloneiv_lcell_comb \count~4 (
// Equation(s):
// \count~4_combout  = (!\Load~input_o  & (count[3] $ (((count[0] & !\count~3_combout )))))

	.dataa(\Load~input_o ),
	.datab(count[0]),
	.datac(count[3]),
	.datad(\count~3_combout ),
	.cin(gnd),
	.combout(\count~4_combout ),
	.cout());
// synopsys translate_off
defparam \count~4 .lut_mask = 16'h5014;
defparam \count~4 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X11_Y1_N29
dffeas \count[3] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\count~4_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(count[3]),
	.prn(vcc));
// synopsys translate_off
defparam \count[3] .is_wysiwyg = "true";
defparam \count[3] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N24
cycloneiv_lcell_comb \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (count[2] & (!count[0] & (count[1] & !count[3])))

	.dataa(count[2]),
	.datab(count[0]),
	.datac(count[1]),
	.datad(count[3]),
	.cin(gnd),
	.combout(\Equal0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~0 .lut_mask = 16'h0020;
defparam \Equal0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X11_Y1_N25
dffeas \K~reg0 (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\Equal0~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\K~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \K~reg0 .is_wysiwyg = "true";
defparam \K~reg0 .power_up = "low";
// synopsys translate_on

assign K = \K~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_NCEO~	=>  Location: PIN_N5,	 I/O Standard: 2.5 V,	 Current Strength: 16mA
// ~ALTERA_DATA0~	=>  Location: PIN_A5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_ASDO~	=>  Location: PIN_B5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_NCSO~	=>  Location: PIN_C5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_A4,	 I/O Standard: 2.5 V,	 Current Strength: Default

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO~~padout ;
wire \~ALTERA_NCSO~~padout ;
wire \~ALTERA_DATA0~~ibuf_o ;
wire \~ALTERA_ASDO~~ibuf_o ;
wire \~ALTERA_NCSO~~ibuf_o ;


endmodule
